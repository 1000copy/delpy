result := TLispNodeNull.create(FLispLang,true);
result := TLispNodeTrue.create(FLispLang) 
result := TLispNodeFalse.create(FLispLang);
result := TLispNodeList.create(FLispLang,ll);

--------------------2008年4月10日

8日制定的testcase提过复杂，涉及到还没有的特性--oo，因此需要简化，以便集中精力

main:
  (load "forms")
  (load "form1")
  (setq MainForm (new TForm ))
  (MainLoop)
可视效果
  运行了一个主窗口
   
--------------------2008年4月9日 
  确实要去回忆下，2007年到今天我想要做什么，真正做了什么，做成了那些？没有做到的，是否还要做
 　1. emacs 神秘的编辑器 - 有眉目了
   2. plt schema 
   3. clisp ,简直没有搞头
   4. liusp，自己的，想要oo的，有orm的，有gui的。这一年来，常常想做，但是事到临头，都放弃了，比如今天
      写了testcase，结果还是放弃，也是乘兴而来，败兴而归。
   5. easycmd。不错的成果
   6. 翻译经典论文。stepwise.pdf ,快完了，还有2 goto statement,3 gonald knuth
   7. 短信。久违了的激情
   8. eneditor,下一步比较迷茫。
   9. linq + sivlerlight ，即将开始
  10. 常常阅读立志文章。鼓舞士气，效果不错，看google notebook
  11. 转换fz -> vb,c# ，做的非常的有声有色，但是何时应用？热情在被逐步的消磨。
  12, 管理，渐入佳境
  13. 太极，摄影，自行车，旱冰，慢慢热起来。运动宜蛮拙？
  14. 文章，书，积累的很多了，文笔也丰富了，可是如何对外发布？
  15. 定期聚会。有些想要脱亚入欧了。
  16. 定期的伟人传记，小说，技术大家，blog，学东西比较快了。
  17. Java ,netbean ,都是安装了就卸载。
  18. 这一整年，除了synedit外，并没有看任何opensrc的东西，现在开始得找一个来看。
  当迷茫的适合，回来看看。

  从以上的内容，我猜想我自己在希望通过一个工具（emacs），一个神奇的语言（lisp,schema),还是非主流的，
解决全部问题或者说解决全部思考问题，既然不死心，那么就干脆真的去学习下。
免得以后总是想，总是在有些爱好者的文章的煽动下，再次蠢蠢欲动。当然也许学习了后有意外的收获。

--------------------2008年4月9日 
  再次燃起对Pltshema ,emacs,clisp的热情。
  1. Steel Bank Common Lisp 只有一个console界面，没有ui库的支持，还被评为最好的了，这也太...
     
  2. emacs,我喜欢的输入法都用不了，人家都是用自己的输入法，还想什么？日。
     这些版本支持中文真的很麻烦。http://learn.tsinghua.edu.cn:8080/2004211031/publish/GNU/ntemacs.html
  3. emacs 23 现在还是alpha版本，但是可以使用os的输入法了，看来emacs这个胡子一大把的家伙也开始有转变了。
     现在emacs 23不必那么麻烦了
     这小子自己编译了一个版本。http://learn.tsinghua.edu.cn:8080/2002315162/emacs_for_windows.html
--------------------2008年4月9日 Testcase of Lisp GUI
main:
  (load "forms")
  (load "form1")
  (setq MainForm (new TForm1 ))
  (MainLoop)
form1
  (
   def-class TForm1
	(prop NewTitle)
	(def-fun TForm1 (a b)
		nil
	)
	(def-fun func1 (b c)
		nil
	)
  )
可视效果
  运行了一个主窗口

--------------------2008 - 1- 14 这个文章看起来已经解决了我的问题。
  webdirectory在物理目录存在，但是在iismetabase内不存在，在使用前，需要创建webdirectory。、
  
   When you create a new directory or a file under a virtual directory, the directories or files are not created under the IIS Metabase. If you want to change the metabase properties of them, you will get an error like "The system cannot find the path specified".
If you want to change the metabase properties of this directory or file, first you must create the directory or file under the IIS Metabase.

http://www.codersource.net/csharp_iis_metabase.html

2008 - 1- 14 
System.DirectoryServices和adsi，wmi也是不同的？

Admin objects are used when configuring IIS using the IIS ADSI and WMI providers, or System.DirectoryServices.



2008 - 1- 14 这个文章接近于完美了，太好了，它不但有那些类，接口去操作iis，同事有Metabase Properties，就是那些在字符串内可以填写的内容清单，比如webdir.Accessscript就是允许执行脚本，但是这里除了Accessscript还可以写什么？这个文章都有列出。我是通过查找IIsWebDirectory找到的。为什么我的MSDN中没有？
	
http://msdn2.microsoft.com/en-us/library/ms526026(VS.85).aspx
这里谈到的AccessFlags的可选值，包括AccessWrite，我想要的。
http://msdn2.microsoft.com/en-us/library/ms525016(VS.85).aspx

2008 - 1- 14 这个文章描述的就是我的问题。非常精确。
http://channel9.msdn.com/ShowPost.aspx?PostID=46824
2008 - 1- 14 最接近我的问题了。
  我的虚拟目录为ad2，在ad2下有一个目录，叫做upload，需要设置他的实现为“允许写”，请看这段代码。
http://www.velocityreviews.com/forums/t80550-creating-web-applications-not-via-iis-console.html

2008 - 1- 14 一个人提到的问题中，说明随着深入的研究，他看到了davidwang的网站。
Initially, research into this has led me to David's blog entry, which is helpful even though it is not intended to address this particular issue:

2008 - 1- 14  david wang ,讲述了wmi和adsi的典型的代码上的区别，并举了一个混合使用的问题例子。

http://blogs.msdn.com/david.wang/archive/2006/06/23/IIS-Configuration-Woes-with-ADSI-WMI-and-VBScript.aspx


2008 - 1- 14  又见david wang ,他讲述了ntfs 权限，iis配置权限的差别，以及为什么iis没有设置可写，但是文件却可以upload的原因。

http://blogs.msdn.com/david.wang/archive/2005/08/20/Why-can-I-upload-a-file-without-IIS-Write-Permission.aspx

2008 - 1- 14  IIS可以在IISmmc内或者NTFS文件系统中设置权限，区别何在?

 IIS Web 服务器的权限设置有两个地方，一个是 NTFS 文件系统本身的权限设置，另一个是 IIS 下网站->站点->属性->主目录（或站点下目录->属性->目录）面板上。这两个地方是密切相关的。
 	 See http://hi.bc-cn.net/112902/viewspace-7915
2008 - 1- 14  参考 IIS7的IUSR帐号和原来的IUSR_MachineName的差别

	IUSR内建帐号替代了IUSR_MachineName帐号
	IIS_IUSRS内建组替代了IIS_WPG组
  See http://www.codepub.com/info/2007/03/info-11752.html
2008 - 1- 14  参考
	这篇文章提到了 解决IIS目录权限问题[Microsoft OLE DB Provider for ODBC Drivers (0x80004005)] 
	[Microsoft][ODBC Microsoft Access Driver] 不能更新。数据库或对象为只读。
	和我sqlite遇到的问题类似，需要研究。
	http://zheman.blog.enorth.com.cn/article/51725.shtml
2008 - 1- 13  
  早晨被自己的各种想法逼的无处藏身，起来觉得有不少想法需要形诸文字。
  一篇叫做“ Martin Flowler的诚恳”，我开始注意Flowler始于Uml distilled，感到他语言简练，仅仅谈自己做的的事情，并不轻易的把道听途说的东西当成真理。能够明确的区分自己的信念和现实的区别。
  和举世滔滔的大词比如web2.0 ，跨时代，他居于常识的判断往往一开始并不被其他人注意，而这样的诚恳也越来越不容易获得了。
  一个很小的例子可以一窥端倪。
  在清华大学出版社出的一本UML的书内讲到UML的历史，3友合并后，他们宣传“我们胜利了”，就完了。而Martin Flowler
  这是从自己的视角看到“3友宣布我们胜利了，而另外的其他的方法学家这宣布成立一个反UML联盟，叫做OpenUML，这真的很有趣”。
  方法学，以及推而广之的知识技术，那里有真正胜利的时候，“我们胜利了”，其实仅仅适用于商业推广的胜利。
  
  Flowler的说法不但有见地，并且看到了其他人的工作的成就和人们自己的想法的珍视。Lisp等函数语言的在多核来临时回潮也表面不是显学的技术，在未来某一天成为显学。
  倘若UML一叶障目，那里还看得到CRC卡片，面向契约的设计，面向方面的设计，ER等总多的设计方法依然在日常工作中有很多的应用。
  既然我是Flowler的fans，我想我需要了解他更多，那个大学的，在那些公司混过，做过那些项目，写过那些书，最近在想甚么？要不要了解生日等？
  
  一篇叫做“ Freepascle+lazarus社区开始活跃”，逐渐的Delphi开始从我个人的开发时间从所占份额变少，在我们公司以及我的朋友圈内的用户也在变少，大家在聚会时更多谈到的是和Dotnet，Java，C++相关的话题。而Delphi渐渐的淡出，我更多的注意到Object Pascal系列语言工具的开源方案开始活跃了起来。
  毕竟是开发MIS系统的，我的需求是一个IDE，一个数据库，一个界面的方案和一个访问数据库的方案，在公司所使用的工具以往的组合大多数Delphi+StringGrid变种+Ado+SQLSERVER2000，个人使用因为可以自由选择，因此采用的Delphi+Stringgrid+Zeoslib+Mysql，Delphi在版本7以后就没有再使用了，现在还是在使用delphi7。但是人人都知道Delphi7这个win32曾经的最高成就的Object Pascal开发套件，不再会被升级。选择替代品也就是必然的了。我需要的依然还是一个IDE，一个数据库，一个界面的方案和一个访问数据库的方案。
  IDE没有可以选择的，只有Freepascle+lazarus，坚持FL。
  界面就要看FL又什么可用的了。
  数据库访问一定是zeoslib，第一次使用zeoslib，当时还是5.0 ,就知道它支持FL了，成熟的方案当然会得到更多的关注。
  我一直在关注Freepascle+lazarus社区，还有zeoslib的社区，前者只是关注，后者已经开发了一个项目，是一个比较简单，稳定的访问同一数据库的控件包。
  最近发现他们的社区开始热闹了，今天上去又看了一次，最近的产品发布是12.12.2007, 22:39发布的一个版本“ZEOSDBO 6.6.2 release candidate released”，就是说昨天在发布。论坛内的帖子也明显是最近发布的，很热闹。要知道这个zeoslib曾经一度论坛都被关闭过，又1-2年的时间几乎没有任何发布，无论是产品还是帖子。
  上了FL社区，我注意到它又一个调查，Are you interested in a Lazarus/ZeosLib Developer Conference?看来他们和我想的一样，并且两者联合会更加实际些。
  另外我注意到的一个事实：lazarus现在的最新版本为0.9,就是说也许只要一年，正式版本就是出来了，至于Freepascal，版本是2.x，就是说关于稳定和完整性，是不必又太多的担心的。
  这两个工具，至少都有5-6年的历史，因为我从一开始关注他们就已经又5年了，当时他们的版本都已经是基本可用的状态。之所以一直不是很多人都在用，我想是Delphi的光芒太盛的原因吧 。
  前两周我做了两个尝试，一个是把我以往写的Lisp解释程序从delphi移植过来。我记得不过费了10分钟左右，也许还不到这个时间，简单的令我难以接受。这个LIsp解释程序，界面很简单，其中又一个form，一个memo，几个button，另外它广泛的使用了Sysuitls，classes。。等基本单元，使用FL提供的转换工具，我在转换过程中并没有做任何函数或者类的更改，FL只是加入了一个自己格式的工程文件，具体格式还没有仔细研究，记得有一个是XML格式的。看起来简单应用，对delphivcl依赖不是那么多的，转移是零成本的事情；如果你的应用使用了大量的thirdparty控件，或者比较高级的控件，我想这个转移会非常困难。
  StringGrid我也试用了，比起delpi的StringGrid，FP的要好用的多。
  为了体验一下FL提供的IDE提供的编码，code complete,code insight ,工程组和配置能力，我决定把前一段时间在delphi上编写的一个函数在FL内重写一遍。
  

  其他文章的想法：
   1. Delphi7的小毛病
   2. 技术思维的多面性
   3. Devlayout研究，和Koning的字符图像控制的对比。引出教学和研发的关联。
   4. UML我的个人实践，几个朋友谈到UML的正向实践。
   5. 我需要一个delphi的ORM，因为castle实在令我印象太过深刻。