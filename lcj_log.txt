2008 - 1- 13  
  早晨被自己的各种想法逼的无处藏身，起来觉得有不少想法需要形诸文字。
  一篇叫做“ Martin Flowler的诚恳”，我开始注意Flowler始于Uml distilled，感到他语言简练，仅仅谈自己做的的事情，并不轻易的把道听途说的东西当成真理。能够明确的区分自己的信念和现实的区别。
  和举世滔滔的大词比如web2.0 ，跨时代，他居于常识的判断往往一开始并不被其他人注意，而这样的诚恳也越来越不容易获得了。
  一个很小的例子可以一窥端倪。
  在清华大学出版社出的一本UML的书内讲到UML的历史，3友合并后，他们宣传“我们胜利了”，就完了。而Martin Flowler
  这是从自己的视角看到“3友宣布我们胜利了，而另外的其他的方法学家这宣布成立一个反UML联盟，叫做OpenUML，这真的很有趣”。
  方法学，以及推而广之的知识技术，那里有真正胜利的时候，“我们胜利了”，其实仅仅适用于商业推广的胜利。
  
  Flowler的说法不但有见地，并且看到了其他人的工作的成就和人们自己的想法的珍视。Lisp等函数语言的在多核来临时回潮也表面不是显学的技术，在未来某一天成为显学。
  倘若UML一叶障目，那里还看得到CRC卡片，面向契约的设计，面向方面的设计，ER等总多的设计方法依然在日常工作中有很多的应用。
  既然我是Flowler的fans，我想我需要了解他更多，那个大学的，在那些公司混过，做过那些项目，写过那些书，最近在想甚么？要不要了解生日等？
  
  一篇叫做“ Freepascle+lazarus社区开始活跃”，逐渐的Delphi开始从我个人的开发时间从所占份额变少，在我们公司以及我的朋友圈内的用户也在变少，大家在聚会时更多谈到的是和Dotnet，Java，C++相关的话题。而Delphi渐渐的淡出，我更多的注意到Object Pascal系列语言工具的开源方案开始活跃了起来。
  毕竟是开发MIS系统的，我的需求是一个IDE，一个数据库，一个界面的方案和一个访问数据库的方案，在公司所使用的工具以往的组合大多数Delphi+StringGrid变种+Ado+SQLSERVER2000，个人使用因为可以自由选择，因此采用的Delphi+Stringgrid+Zeoslib+Mysql，Delphi在版本7以后就没有再使用了，现在还是在使用delphi7。但是人人都知道Delphi7这个win32曾经的最高成就的Object Pascal开发套件，不再会被升级。选择替代品也就是必然的了。我需要的依然还是一个IDE，一个数据库，一个界面的方案和一个访问数据库的方案。
  IDE没有可以选择的，只有Freepascle+lazarus，坚持FL。
  界面就要看FL又什么可用的了。
  数据库访问一定是zeoslib，第一次使用zeoslib，当时还是5.0 ,就知道它支持FL了，成熟的方案当然会得到更多的关注。
  我一直在关注Freepascle+lazarus社区，还有zeoslib的社区，前者只是关注，后者已经开发了一个项目，是一个比较简单，稳定的访问同一数据库的控件包。
  最近发现他们的社区开始热闹了，今天上去又看了一次，最近的产品发布是12.12.2007, 22:39发布的一个版本“ZEOSDBO 6.6.2 release candidate released”，就是说昨天在发布。论坛内的帖子也明显是最近发布的，很热闹。要知道这个zeoslib曾经一度论坛都被关闭过，又1-2年的时间几乎没有任何发布，无论是产品还是帖子。
  上了FL社区，我注意到它又一个调查，Are you interested in a Lazarus/ZeosLib Developer Conference?看来他们和我想的一样，并且两者联合会更加实际些。
  另外我注意到的一个事实：lazarus现在的最新版本为0.9,就是说也许只要一年，正式版本就是出来了，至于Freepascal，版本是2.x，就是说关于稳定和完整性，是不必又太多的担心的。
  这两个工具，至少都有5-6年的历史，因为我从一开始关注他们就已经又5年了，当时他们的版本都已经是基本可用的状态。之所以一直不是很多人都在用，我想是Delphi的光芒太盛的原因吧 。
  前两周我做了两个尝试，一个是把我以往写的Lisp解释程序从delphi移植过来。我记得不过费了10分钟左右，也许还不到这个时间，简单的令我难以接受。这个LIsp解释程序，界面很简单，其中又一个form，一个memo，几个button，另外它广泛的使用了Sysuitls，classes。。等基本单元，使用FL提供的转换工具，我在转换过程中并没有做任何函数或者类的更改，FL只是加入了一个自己格式的工程文件，具体格式还没有仔细研究，记得有一个是XML格式的。看起来简单应用，对delphivcl依赖不是那么多的，转移是零成本的事情；如果你的应用使用了大量的thirdparty控件，或者比较高级的控件，我想这个转移会非常困难。
  StringGrid我也试用了，比起delpi的StringGrid，FP的要好用的多。
  为了体验一下FL提供的IDE提供的编码，code complete,code insight ,工程组和配置能力，我决定把前一段时间在delphi上编写的一个函数在FL内重写一遍。
  

  其他文章的想法：
   1. Delphi7的小毛病
   2. 技术思维的多面性
   3. Devlayout研究，和Koning的字符图像控制的对比。引出教学和研发的关联。
   4. UML我的个人实践，几个朋友谈到UML的正向实践。
   5. 我需要一个delphi的ORM，因为castle实在令我印象太过深刻。